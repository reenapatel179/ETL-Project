

pip install psycopg2
--

create database careervillage;

--sql to create tables

--1.
--answer_scores
--created on 07/24/19

--drop table if it exists
drop table answer_scores;

-- Create a new table answer_scores
CREATE TABLE answer_scores (
  id VARCHAR(60) PRIMARY KEY,
  score INT
);



--2.
--professionals

--drop table if it exists
drop table professionals;

-- Create a new table professionals
CREATE TABLE professionals (
  id VARCHAR(60),
  professional_location VARCHAR(60),
  professional_industry VARCHAR(60),
  professional_headline VARCHAR(120),
  professional_date_joined Date 
);



--3.
--students

--drop table if it exists
drop table students;

-- Create a new table students
CREATE TABLE students ( 
  students_id VARCHAR(60),
  students_location VARCHAR(60),
  students_date_joined Date 
);



--4.
--emails

--drop table if it exists
drop table emails;

-- Create a new table emails
CREATE TABLE emails ( 
  emails_id INT,
  emails_recipient_id VARCHAR(60),
  emails_sent_date Date,
  emails_frequency_level VARCHAR(60)
);





--5.
--tags

--drop table if it exists
drop table tags;

-- Create a new table answer_scores
CREATE TABLE tags (
  tags_tag_id INT,
  tags_tag_name VARCHAR(60)
);


--6.
--groups

--drop table if it exists
drop table groups;

-- Create a new table groups
CREATE TABLE groups (
  groups_id VARCHAR(60),
  groups_group_type VARCHAR(60)
);



--7.
--school_memberships

--drop table if it exists
drop table school_memberships;

-- Create a new table school_memberships
CREATE TABLE school_memberships ( 
  school_memberships_id INT,
  school_memberships_user_id VARCHAR(60)
);



--8.
--matches

--drop table if it exists
drop table matches;

-- Create a new table matches
CREATE TABLE matches ( 
  matches_email_id INT,
  matches_question_id VARCHAR(60)
);





--sql to create tables

--9.
--answers
--created on 07/24/19

--drop table if it exists
drop table answers;

-- Create a new table answers
CREATE TABLE answers (
  answers_id VARCHAR(60) PRIMARY KEY,
  answers_author_id VARCHAR(60),
  answers_question_id VARCHAR(60),
  answers_date_added date,
  answers_body TEXT
);


--10.
--tag_users

--drop table if it exists
drop table tag_users;

-- Create a new table tag_users
CREATE TABLE tag_users(
  tag_users_id INT,
  tag_users_user_id VARCHAR(60)
);



--11.
--tag_questions

--drop table if it exists
drop table tag_questions;

-- Create a new table tag_questions
CREATE TABLE tag_questions ( 
  tag_questions_tag_id INT,
  tag_questions_question_id VARCHAR(60)
);



--12.
--questions
--created on 07/24/19

--drop table if it exists
drop table questions;

-- Create a new table questions
CREATE TABLE questions ( 
  questions_id VARCHAR(60),
  questions_author_id VARCHAR(60),
  questions_date_added date,
  questions_title TEXT,
  questions_body TEXT
);





--13.
--group_memberships

--drop table if it exists
drop table group_memberships;

-- Create a new table group_memberships
CREATE TABLE tags (
  group_memberships_group_id VARCHAR(60),
  group_memberships_user_id VARCHAR(60)
);


--14.
--comments
--created on 07/24/19

CREATE DATABASE careervillage;

--drop table if it exists
drop table comments;

-- Create a new table comments
CREATE TABLE comments (
  comments_id VARCHAR(60),
  comments_author_id VARCHAR(60),
  comments_parent_content_id VARCHAR(60),
  comments_date_added DATE,
  comments_body TEXT
);



--15.
--questions_score
--created on 07/24/19

--drop table if it exists
drop table question_scores;

-- Create a new table question_scores
CREATE TABLE question_scores( 
  id VARCHAR(60),
  score INT
);








